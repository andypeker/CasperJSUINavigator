



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>es5-shim/es5-shim.min.js at master Â· es-shims/es5-shim</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="es-shims/es5-shim" name="twitter:title" /><meta content="es5-shim - ECMAScript 5 compatibility shims for legacy JavaScript engines" name="twitter:description" /><meta content="https://avatars1.githubusercontent.com/u/6288429?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars1.githubusercontent.com/u/6288429?v=2&amp;s=400" property="og:image" /><meta content="es-shims/es5-shim" property="og:title" /><meta content="https://github.com/es-shims/es5-shim" property="og:url" /><meta content="es5-shim - ECMAScript 5 compatibility shims for legacy JavaScript engines" property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="3D989689:5B17:161C8E98:541FAAF7" name="octolytics-dimension-request_id" /><meta content="3948406" name="octolytics-actor-id" /><meta content="andypeker" name="octolytics-actor-login" /><meta content="2b83909c19baaf8a096ce63a14cf0518065b9529b0b2bd094c3021de1ad70109" name="octolytics-actor-hash" />
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="GDtfxtcxFrnnQS2KAlPBsxx69cBKEtUqm/L+lC+L/k+PvAtCCMWRg4rxuf+RRo47qv02cT9ZwrVBfuDOm8VV/A==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-b83b8eb08bbe9393c7a5d777e6a86ffe4372ab2d.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-6974f31de378b725bc92bba2de583f0def78777d.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="e8f7e8a0a03c89ddad1f42c7a22f1828">

      
  <meta name="description" content="es5-shim - ECMAScript 5 compatibility shims for legacy JavaScript engines">
  <meta name="go-import" content="github.com/es-shims/es5-shim git https://github.com/es-shims/es5-shim.git">

  <meta content="6288429" name="octolytics-dimension-user_id" /><meta content="es-shims" name="octolytics-dimension-user_login" /><meta content="914603" name="octolytics-dimension-repository_id" /><meta content="es-shims/es5-shim" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="914603" name="octolytics-dimension-repository_network_root_id" /><meta content="es-shims/es5-shim" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/es-shims/es5-shim/commits/master.atom" rel="alternate" title="Recent Commits to es5-shim:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search">
          <form accept-charset="UTF-8" action="/es-shims/es5-shim/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/es-shims/es5-shim/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/andypeker" data-ga-click="Header, go to profile, text:username">
      <img alt="FranklinYang" class="avatar" data-user="3948406" height="20" src="https://avatars1.githubusercontent.com/u/3948406?v=2&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">andypeker</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="es-shims/es5-shim">This repository</span>
    </li>
      <li>
        <a href="/es-shims/es5-shim/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Id0YuILVCht85QJrV+TTYcFYV3N8zOeV3cArNk92GpOb/Ti0hbMhJFaPD1MRp4qGgyE1dD5+BZK3YjNSsMw1wg==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="IQhQ94uMZZrvB8veqXcP8YHrbQaeAuVJT4agJF7naH4TpsEEXBpZIn3NC8ZNfa+o7uDKnIh+l/0TpogdvJ7N4Q==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="914603" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/es-shims/es5-shim/watchers">
        146
      </a>
      <a href="/es-shims/es5-shim/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/es-shims/es5-shim/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="YuiP3kfg9D6ASnWbkevqTmBPziGlXTGTosiBVZCqpVYsbB3DQMcBDg2uQ7BrfbBHdAiQtGQMSaTzcsThndGu7g==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar es-shims/es5-shim">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/es-shims/es5-shim/stargazers">
          2,973
        </a>
</form>
    <form accept-charset="UTF-8" action="/es-shims/es5-shim/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="6LNfTZnHFbGXmjGbWIzlhV9B62QFkTEA+45cR7yDKMZn5gS7Gth122EItHVGteXVshCnDhD2Otebuxe08SLZ+g==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star es-shims/es5-shim">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/es-shims/es5-shim/stargazers">
          2,973
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/es-shims/es5-shim/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of es-shims/es5-shim to your account" aria-label="Fork your own copy of es-shims/es5-shim to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/es-shims/es5-shim/network" class="social-count">421</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/es-shims" class="url fn" itemprop="url" rel="author"><span itemprop="title">es-shims</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/es-shims/es5-shim" class="js-current-repository js-repo-home-link">es5-shim</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/es-shims/es5-shim/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/es-shims/es5-shim" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /es-shims/es5-shim">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/es-shims/es5-shim/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /es-shims/es5-shim/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/es-shims/es5-shim/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /es-shims/es5-shim/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/es-shims/es5-shim/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /es-shims/es5-shim/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/es-shims/es5-shim/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /es-shims/es5-shim/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url "
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/es-shims/es5-shim.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/es-shims/es5-shim.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:es-shims/es5-shim.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:es-shims/es5-shim.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url open"
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/es-shims/es5-shim" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/es-shims/es5-shim" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save es-shims/es5-shim to your computer and use it in GitHub Desktop." aria-label="Save es-shims/es5-shim to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/es-shims/es5-shim/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of es-shims/es5-shim as a zip file"
                   title="Download the contents of es-shims/es5-shim as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/es-shims/es5-shim/blob/dad68faeecd35463888b28df5f0466d3eb579856/es5-shim.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:461f299a406e607202888633ee214aef -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/blob/js-shim/es5-shim.min.js"
                 data-name="js-shim"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="js-shim">js-shim</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/blob/master/es5-shim.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/blob/review/es5-shim.min.js"
                 data-name="review"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="review">review</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/blob/work/es5-shim.min.js"
                 data-name="work"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="work">work</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v4.0.3/es5-shim.min.js"
                 data-name="v4.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.3">v4.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v4.0.2/es5-shim.min.js"
                 data-name="v4.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.2">v4.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v4.0.1/es5-shim.min.js"
                 data-name="v4.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.1">v4.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v4.0.0/es5-shim.min.js"
                 data-name="v4.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.0">v4.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.4.0/es5-shim.min.js"
                 data-name="v3.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.4.0">v3.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.3.2/es5-shim.min.js"
                 data-name="v3.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.2">v3.3.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.3.1/es5-shim.min.js"
                 data-name="v3.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.1">v3.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.3.0/es5-shim.min.js"
                 data-name="v3.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.3.0">v3.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.2.0/es5-shim.min.js"
                 data-name="v3.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.0">v3.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.1.1/es5-shim.min.js"
                 data-name="v3.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.1">v3.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.1.0/es5-shim.min.js"
                 data-name="v3.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.0">v3.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.0.2/es5-shim.min.js"
                 data-name="v3.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.2">v3.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.0.1/es5-shim.min.js"
                 data-name="v3.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.1">v3.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v3.0.0/es5-shim.min.js"
                 data-name="v3.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.0">v3.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.3.0/es5-shim.min.js"
                 data-name="v2.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.0">v2.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.2.0/es5-shim.min.js"
                 data-name="v2.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.2.0">v2.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.1.0/es5-shim.min.js"
                 data-name="v2.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.0">v2.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.12/es5-shim.min.js"
                 data-name="v2.0.12"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.12">v2.0.12</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.11/es5-shim.min.js"
                 data-name="v2.0.11"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.11">v2.0.11</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.10/es5-shim.min.js"
                 data-name="v2.0.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.10">v2.0.10</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.9/es5-shim.min.js"
                 data-name="v2.0.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.9">v2.0.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.8/es5-shim.min.js"
                 data-name="v2.0.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.8">v2.0.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.7/es5-shim.min.js"
                 data-name="v2.0.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.7">v2.0.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.6/es5-shim.min.js"
                 data-name="v2.0.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.6">v2.0.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.5/es5-shim.min.js"
                 data-name="v2.0.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.5">v2.0.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.4/es5-shim.min.js"
                 data-name="v2.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.4">v2.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.2/es5-shim.min.js"
                 data-name="v2.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.2">v2.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.1/es5-shim.min.js"
                 data-name="v2.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.1">v2.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v2.0.0/es5-shim.min.js"
                 data-name="v2.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0">v2.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.10/es5-shim.min.js"
                 data-name="v1.2.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.10">v1.2.10</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.8/es5-shim.min.js"
                 data-name="v1.2.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.8">v1.2.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.7/es5-shim.min.js"
                 data-name="v1.2.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.7">v1.2.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.4/es5-shim.min.js"
                 data-name="v1.2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.4">v1.2.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.3/es5-shim.min.js"
                 data-name="v1.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.3">v1.2.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.2/es5-shim.min.js"
                 data-name="v1.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.2">v1.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.1/es5-shim.min.js"
                 data-name="v1.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.1">v1.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.2.0/es5-shim.min.js"
                 data-name="v1.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0">v1.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.1.0/es5-shim.min.js"
                 data-name="v1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.0">v1.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v1.0.0/es5-shim.min.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v0.2.10/es5-shim.min.js"
                 data-name="v0.2.10"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.2.10">v0.2.10</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v0.0.4/es5-shim.min.js"
                 data-name="v0.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.0.4">v0.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v0.0.3/es5-shim.min.js"
                 data-name="v0.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.0.3">v0.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v0.0.2/es5-shim.min.js"
                 data-name="v0.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.0.2">v0.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/es-shims/es5-shim/tree/v0.0.1/es5-shim.min.js"
                 data-name="v0.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.0.1">v0.0.1</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/es-shims/es5-shim/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="es5-shim.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/es-shims/es5-shim" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">es5-shim</span></a></span></span><span class="separator"> / </span><strong class="final-path">es5-shim.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Jordan Harband" class="avatar" data-user="45469" height="24" src="https://avatars3.githubusercontent.com/u/45469?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/ljharb" rel="contributor">ljharb</a></span>
        <time datetime="2014-08-20T22:51:39-07:00" is="relative-time">August 20, 2014</time>
        <div class="commit-title">
            <a href="/es-shims/es5-shim/commit/8f158fe8a5ea282fcf0801761ff0fa83af929259" class="message" data-pjax="true" title="v4.0.3">v4.0.3</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>5</strong>
           contributors
        </a>
      </p>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="kriskowal" href="/es-shims/es5-shim/commits/master/es5-shim.min.js?author=kriskowal"><img alt="Kris Kowal" class="avatar" data-user="60294" height="20" src="https://avatars1.githubusercontent.com/u/60294?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="ljharb" href="/es-shims/es5-shim/commits/master/es5-shim.min.js?author=ljharb"><img alt="Jordan Harband" class="avatar" data-user="45469" height="20" src="https://avatars1.githubusercontent.com/u/45469?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Gozala" href="/es-shims/es5-shim/commits/master/es5-shim.min.js?author=Gozala"><img alt="Irakli Gozalishvili" class="avatar" data-user="21236" height="20" src="https://avatars2.githubusercontent.com/u/21236?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="iwyg" href="/es-shims/es5-shim/commits/master/es5-shim.min.js?author=iwyg"><img alt="Thomas Appel" class="avatar" data-user="718537" height="20" src="https://avatars0.githubusercontent.com/u/718537?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="termi" href="/es-shims/es5-shim/commits/master/es5-shim.min.js?author=termi"><img alt="ÐÐ³Ð¾Ñ Ð¥Ð°Ð»Ð¸Ð¼Ð¾Ð½ÐµÐ½ÐºÐ¾" class="avatar" data-user="973643" height="20" src="https://avatars1.githubusercontent.com/u/973643?v=2&amp;s=40" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Kris Kowal" data-user="60294" height="24" src="https://avatars3.githubusercontent.com/u/60294?v=2&amp;s=48" width="24" />
            <a href="/kriskowal">kriskowal</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Jordan Harband" data-user="45469" height="24" src="https://avatars3.githubusercontent.com/u/45469?v=2&amp;s=48" width="24" />
            <a href="/ljharb">ljharb</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Irakli Gozalishvili" data-user="21236" height="24" src="https://avatars0.githubusercontent.com/u/21236?v=2&amp;s=48" width="24" />
            <a href="/Gozala">Gozala</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Thomas Appel" data-user="718537" height="24" src="https://avatars2.githubusercontent.com/u/718537?v=2&amp;s=48" width="24" />
            <a href="/iwyg">iwyg</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="ÐÐ³Ð¾Ñ Ð¥Ð°Ð»Ð¸Ð¼Ð¾Ð½ÐµÐ½ÐºÐ¾" data-user="973643" height="24" src="https://avatars3.githubusercontent.com/u/973643?v=2&amp;s=48" width="24" />
            <a href="/termi">termi</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>7 lines (7 sloc)</span>
          <span class="meta-divider"></span>
        <span>14.315 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/es-shims/es5-shim/raw/master/es5-shim.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/es-shims/es5-shim/blame/master/es5-shim.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/es-shims/es5-shim/commits/master/es5-shim.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/es-shims/es5-shim/edit/master/es5-shim.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/es-shims/es5-shim/delete/master/es5-shim.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="cm"> * https://github.com/es-shims/es5-shim</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="cm"> * @license es5-shim Copyright 2009-2014 by contributors, MIT License</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="cm"> * see https://github.com/es-shims/es5-shim/blob/v4.0.3/LICENSE</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="p">){</span><span class="nx">define</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">e</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">t</span><span class="p">.</span><span class="nx">returnExports</span><span class="o">=</span><span class="nx">e</span><span class="p">()}})(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">Number</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">splice</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">;</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">unshift</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object RegExp]&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="kd">function</span> <span class="nx">ve</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="kd">function</span> <span class="nx">ge</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object String]&quot;</span><span class="p">};</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="kd">function</span> <span class="nx">ye</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;[object Arguments]&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">){</span><span class="nx">r</span><span class="o">=!</span><span class="nx">p</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">callee</span><span class="p">)}</span><span class="k">return</span> <span class="nx">r</span><span class="p">};</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">({},</span><span class="s2">&quot;x&quot;</span><span class="p">,{});</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}();</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,{</span><span class="nx">configurable</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">enumerable</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">writable</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">r</span><span class="p">})}}</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">)){</span><span class="nx">d</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">n</span><span class="p">)}}};</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">=+</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">!==</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">!==</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">!==-</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="p">)){</span><span class="nx">t</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">))}</span><span class="k">return</span> <span class="nx">t</span><span class="p">}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="o">===</span><span class="kc">null</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">return</span> <span class="nx">t</span><span class="p">}</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">valueOf</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">r</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">return</span> <span class="nx">e</span><span class="p">}}</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">return</span> <span class="nx">e</span><span class="p">}}</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">}</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;can&#39;t convert &quot;</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; to object&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">t</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="kd">function</span> <span class="nx">de</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">};</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(){}</span><span class="nx">m</span><span class="p">(</span><span class="nx">r</span><span class="p">,{</span><span class="nx">bind</span><span class="o">:</span><span class="kd">function</span> <span class="nx">me</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Function.prototype.bind called on incompatible &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)));</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">===</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))}};</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;$&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;binder&quot;</span><span class="p">,</span><span class="s2">&quot;return function (&quot;</span><span class="o">+</span><span class="nx">o</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;){return binder.apply(this,arguments)}&quot;</span><span class="p">)(</span><span class="nx">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">u</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">T</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">u</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">);</span><span class="kd">var</span> <span class="nx">E</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="p">;</span><span class="kd">var</span> <span class="nx">I</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">_</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;__defineGetter__&quot;</span><span class="p">)){</span><span class="nx">E</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">__defineGetter__</span><span class="p">);</span><span class="nx">N</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">__defineSetter__</span><span class="p">);</span><span class="nx">I</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">__lookupGetter__</span><span class="p">);</span><span class="nx">D</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">__lookupSetter__</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">];</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">splice</span><span class="p">();</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">}();</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">splice</span><span class="o">:</span><span class="kd">function</span> <span class="nx">we</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}},</span><span class="nx">M</span><span class="p">);</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">t</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">}();</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">splice</span><span class="o">:</span><span class="kd">function</span> <span class="nx">be</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">!==</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">t</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">)}},</span><span class="o">!</span><span class="nx">F</span><span class="p">);</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="p">[].</span><span class="nx">unshift</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!==</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">unshift</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">u</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">}},</span><span class="nx">R</span><span class="p">);</span><span class="nx">m</span><span class="p">(</span><span class="nb">Array</span><span class="p">,{</span><span class="nx">isArray</span><span class="o">:</span><span class="nx">p</span><span class="p">});</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nb">Object</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;a&quot;</span><span class="o">||!</span><span class="p">(</span><span class="mi">0</span> <span class="k">in</span> <span class="nx">k</span><span class="p">);</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="kd">function</span> <span class="nx">xe</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s2">&quot;foo&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="kc">false</span><span class="p">}});</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">([</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="k">typeof</span> <span class="k">this</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">},</span><span class="s2">&quot;x&quot;</span><span class="p">)}</span><span class="k">return</span><span class="o">!!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">};</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">forEach</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Se</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="o">++</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}}},</span><span class="o">!</span><span class="nx">U</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">forEach</span><span class="p">));</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Oe</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">i</span><span class="p">}},</span><span class="o">!</span><span class="nx">U</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">map</span><span class="p">));</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">filter</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Te</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">)){</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}}</span><span class="k">return</span> <span class="nx">i</span><span class="p">}},</span><span class="o">!</span><span class="nx">U</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">filter</span><span class="p">));</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">every</span><span class="o">:</span><span class="kd">function</span> <span class="nx">je</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="o">&amp;&amp;!</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}},</span><span class="o">!</span><span class="nx">U</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">every</span><span class="p">));</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">some</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ee</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}},</span><span class="o">!</span><span class="nx">U</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">some</span><span class="p">));</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">reduce</span><span class="p">){</span><span class="nx">A</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">reduce</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s2">&quot;es5&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">})</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">}</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">reduce</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ne</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduce of empty array with no initial value&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="o">++</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">++</span><span class="nx">i</span><span class="o">&gt;=</span><span class="nx">n</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduce of empty array with no initial value&quot;</span><span class="p">)}}</span><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="k">for</span><span class="p">(;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}},</span><span class="o">!</span><span class="nx">A</span><span class="p">);</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">reduceRight</span><span class="p">){</span><span class="nx">P</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">reduceRight</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s2">&quot;es5&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">})</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">}</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">reduceRight</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ie</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduceRight of empty array with no initial value&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="o">--</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduceRight of empty array with no initial value&quot;</span><span class="p">)}}</span><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">--</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">}},</span><span class="o">!</span><span class="nx">P</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">indexOf</span><span class="o">:</span><span class="kd">function</span> <span class="nx">De</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">])}</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">}}</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}},</span><span class="nx">Z</span><span class="p">);</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">].</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nx">t</span><span class="p">,{</span><span class="nx">lastIndexOf</span><span class="o">:</span><span class="kd">function</span> <span class="nx">_e</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">w</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]))}</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="p">]){</span><span class="k">return</span> <span class="nx">n</span><span class="p">}}</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}},</span><span class="nx">J</span><span class="p">);</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=!</span><span class="p">{</span><span class="nx">toString</span><span class="o">:</span><span class="kc">null</span><span class="p">}.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;toString&quot;</span><span class="p">),</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(){}.</span><span class="nx">propertyIsEnumerable</span><span class="p">(</span><span class="s2">&quot;prototype&quot;</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;toString&quot;</span><span class="p">,</span><span class="s2">&quot;toLocaleString&quot;</span><span class="p">,</span><span class="s2">&quot;valueOf&quot;</span><span class="p">,</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="s2">&quot;isPrototypeOf&quot;</span><span class="p">,</span><span class="s2">&quot;propertyIsEnumerable&quot;</span><span class="p">,</span><span class="s2">&quot;constructor&quot;</span><span class="p">],</span><span class="nx">B</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nb">Object</span><span class="p">,{</span><span class="nx">keys</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Me</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Object.keys called on a non-object&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">$</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">r</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">l</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">l</span><span class="p">))}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">===</span><span class="s2">&quot;prototype&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">u</span><span class="p">))}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">constructor</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">prototype</span><span class="o">===</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">B</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">===</span><span class="s2">&quot;constructor&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">p</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">)}}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}});</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="p">}(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nb">Object</span><span class="p">,{</span><span class="nx">keys</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Fe</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}},</span><span class="o">!</span><span class="nx">H</span><span class="p">);</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=-</span><span class="mi">621987552</span><span class="nx">e5</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="s2">&quot;-000001&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toISOString</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">X</span><span class="p">).</span><span class="nx">toISOString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">Y</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,{</span><span class="nx">toISOString</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Re</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isFinite</span><span class="p">(</span><span class="k">this</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="s2">&quot;Date.prototype.toISOString called on non-finite value.&quot;</span><span class="p">)}</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">();</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">();</span><span class="nx">n</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="o">/</span><span class="mi">12</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">%</span><span class="mi">12</span><span class="o">+</span><span class="mi">12</span><span class="p">)</span><span class="o">%</span><span class="mi">12</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCHours</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMinutes</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCSeconds</span><span class="p">()];</span><span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="nx">n</span><span class="o">&gt;</span><span class="mi">9999</span><span class="o">?</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;00000&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">&lt;=</span><span class="mi">9999</span><span class="o">?-</span><span class="mi">4</span><span class="o">:-</span><span class="mi">6</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">){</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">}}</span><span class="k">return</span> <span class="nx">n</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;000&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMilliseconds</span><span class="p">()).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Z&quot;</span><span class="p">}},</span><span class="nx">q</span><span class="p">);</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">K</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="kc">NaN</span><span class="p">).</span><span class="nx">toJSON</span><span class="p">()</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">X</span><span class="p">).</span><span class="nx">toJSON</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">Y</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">.</span><span class="nx">call</span><span class="p">({</span><span class="nx">toISOString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Q</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">){</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span> <span class="nx">ke</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Object</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">r</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;!</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">r</span><span class="p">)){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">toISOString</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">!==</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;toISOString property is not callable&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&quot;+033658-09-27T01:46:40.000Z&quot;</span><span class="p">)</span><span class="o">===</span><span class="mi">1</span><span class="nx">e15</span><span class="p">;</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&quot;2012-04-04T24:00:00.500Z&quot;</span><span class="p">))</span><span class="o">||!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&quot;2012-11-31T23:59:59.000Z&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">te</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&quot;2000-01-01T00:00:00.000Z&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="o">||</span><span class="nx">te</span><span class="o">||</span><span class="nx">W</span><span class="o">||!</span><span class="nx">V</span><span class="p">){</span><span class="nb">Date</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">===</span><span class="nx">r</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">r</span><span class="p">))</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">7</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">5</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">4</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">3</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">?</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">t</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="s2">&quot;(\\d{4}|[+-]\\d{6})&quot;</span><span class="o">+</span><span class="s2">&quot;(?:-(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;(?:-(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;(?:&quot;</span><span class="o">+</span><span class="s2">&quot;T(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;:(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;(?:&quot;</span><span class="o">+</span><span class="s2">&quot;:(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;(?:(\\.\\d{1,}))?&quot;</span><span class="o">+</span><span class="s2">&quot;)?&quot;</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="s2">&quot;Z|&quot;</span><span class="o">+</span><span class="s2">&quot;(?:&quot;</span><span class="o">+</span><span class="s2">&quot;([-+])&quot;</span><span class="o">+</span><span class="s2">&quot;(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;:(\\d{2})&quot;</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">+</span><span class="s2">&quot;)?)?)?)?&quot;</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">59</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">120</span><span class="p">,</span><span class="mi">151</span><span class="p">,</span><span class="mi">181</span><span class="p">,</span><span class="mi">212</span><span class="p">,</span><span class="mi">243</span><span class="p">,</span><span class="mi">273</span><span class="p">,</span><span class="mi">304</span><span class="p">,</span><span class="mi">334</span><span class="p">,</span><span class="mi">365</span><span class="p">];</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">t</span><span class="o">-</span><span class="mi">1969</span><span class="o">+</span><span class="nx">r</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">t</span><span class="o">-</span><span class="mi">1901</span><span class="o">+</span><span class="nx">r</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">t</span><span class="o">-</span><span class="mi">1601</span><span class="o">+</span><span class="nx">r</span><span class="p">)</span><span class="o">/</span><span class="mi">400</span><span class="p">)</span><span class="o">+</span><span class="mi">365</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">1970</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="k">new</span> <span class="nx">t</span><span class="p">(</span><span class="mi">1970</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">))}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">o</span><span class="p">]}</span><span class="nx">e</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">now</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">UTC</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">UTC</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">l</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="mi">1</span><span class="nx">e3</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nb">Boolean</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">[</span><span class="mi">8</span><span class="p">]),</span><span class="nx">v</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;-&quot;</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span><span class="p">(</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">24</span><span class="o">:</span><span class="mi">25</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">60</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">60</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="mi">1</span><span class="nx">e3</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&lt;</span><span class="mi">24</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="o">&lt;</span><span class="mi">60</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">-</span><span class="nx">i</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="p">((</span><span class="nx">i</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="nx">u</span><span class="p">)</span><span class="o">*</span><span class="mi">24</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">v</span><span class="p">)</span><span class="o">*</span><span class="mi">60</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="nx">y</span><span class="o">*</span><span class="nx">v</span><span class="p">)</span><span class="o">*</span><span class="mi">60</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="mi">1</span><span class="nx">e3</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">864</span><span class="nx">e13</span><span class="o">&lt;=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="mi">864</span><span class="nx">e13</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">}}</span><span class="k">return</span> <span class="kc">NaN</span><span class="p">}</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">parse</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="k">return</span> <span class="nx">e</span><span class="p">}(</span><span class="nb">Date</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">){</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="kd">function</span> <span class="nx">Ce</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()}}</span><span class="kd">var</span> <span class="nx">ee</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">toFixed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">8</span><span class="nx">e</span><span class="o">-</span><span class="mi">5</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;0.000&quot;</span><span class="o">||</span><span class="p">.</span><span class="mi">9</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;1&quot;</span><span class="o">||</span><span class="mf">1.255</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;1.25&quot;</span><span class="o">||</span><span class="mh">0xde0b6b3a7640080</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;1000000000000000128&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">re</span><span class="o">=</span><span class="p">{</span><span class="nx">base</span><span class="o">:</span><span class="mi">1</span><span class="nx">e7</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">multiply</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ue</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">++</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">re</span><span class="p">.</span><span class="nx">size</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="nx">t</span><span class="o">*</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">%</span><span class="nx">re</span><span class="p">.</span><span class="nx">base</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="nx">re</span><span class="p">.</span><span class="nx">base</span><span class="p">)}},</span><span class="nx">divide</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ae</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">re</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">--</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">r</span><span class="o">+=</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">r</span><span class="o">/</span><span class="nx">t</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="o">%</span><span class="nx">t</span><span class="o">*</span><span class="nx">re</span><span class="p">.</span><span class="nx">base</span><span class="p">}},</span><span class="nx">numToString</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Pe</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">re</span><span class="p">.</span><span class="nx">size</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">--</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">t</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">re</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">t</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;0000000&quot;</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="o">-</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">+</span><span class="nx">r</span><span class="p">}}}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">pow</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Ze</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="nx">r</span><span class="o">:</span><span class="nx">e</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">Ze</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">*</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="nx">Ze</span><span class="p">(</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">r</span><span class="p">)},</span><span class="nx">log</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Je</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">4096</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="mi">12</span><span class="p">;</span><span class="nx">t</span><span class="o">/=</span><span class="mi">4096</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="o">/=</span><span class="mi">2</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">}};</span><span class="nx">m</span><span class="p">(</span><span class="nx">i</span><span class="p">,{</span><span class="nx">toFixed</span><span class="o">:</span><span class="kd">function</span> <span class="nx">ze</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="nx">e</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">20</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="s2">&quot;Number.toFixed called with invalid number of decimals&quot;</span><span class="p">)}</span><span class="nx">r</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">!==</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;NaN&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;=-</span><span class="mi">1</span><span class="nx">e21</span><span class="o">||</span><span class="nx">r</span><span class="o">&gt;=</span><span class="mi">1</span><span class="nx">e21</span><span class="p">){</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="p">;</span><span class="nx">r</span><span class="o">=-</span><span class="nx">r</span><span class="p">}</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">&gt;</span><span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">21</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">re</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">r</span><span class="o">*</span><span class="nx">re</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">69</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="o">-</span><span class="mi">69</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">r</span><span class="o">*</span><span class="nx">re</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">r</span><span class="o">/</span><span class="nx">re</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">o</span><span class="o">*=</span><span class="mi">4503599627370496</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="mi">52</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">l</span><span class="o">&gt;=</span><span class="mi">7</span><span class="p">){</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="mi">1</span><span class="nx">e7</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">l</span><span class="o">-=</span><span class="mi">7</span><span class="p">}</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="nx">re</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">l</span><span class="o">&gt;=</span><span class="mi">23</span><span class="p">){</span><span class="nx">re</span><span class="p">.</span><span class="nx">divide</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">23</span><span class="p">);</span><span class="nx">l</span><span class="o">-=</span><span class="mi">23</span><span class="p">}</span><span class="nx">re</span><span class="p">.</span><span class="nx">divide</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">l</span><span class="p">);</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">re</span><span class="p">.</span><span class="nx">divide</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">re</span><span class="p">.</span><span class="nx">numToString</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="nx">re</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;-</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">re</span><span class="p">.</span><span class="nx">numToString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;0.00000000000000000000&quot;</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="o">+</span><span class="nx">e</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;0.0000000000000000000&quot;</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">u</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nx">i</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">-</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">u</span><span class="o">-</span><span class="nx">e</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="nx">i</span><span class="p">}</span><span class="k">return</span> <span class="nx">i</span><span class="p">}},</span><span class="nx">ee</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ne</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;ab&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(?:ab)*/</span><span class="p">).</span><span class="nx">length</span><span class="o">!==</span><span class="mi">2</span><span class="o">||</span><span class="s2">&quot;.&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(.?)(.?)/</span><span class="p">).</span><span class="nx">length</span><span class="o">!==</span><span class="mi">4</span><span class="o">||</span><span class="s2">&quot;tesst&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(s)*/</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;t&quot;</span><span class="o">||</span><span class="s2">&quot;test&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(?:)/</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">length</span><span class="o">!==</span><span class="mi">4</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/.?/</span><span class="p">).</span><span class="nx">length</span><span class="o">||</span><span class="s2">&quot;.&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/()()/</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/()??/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;[object RegExp]&quot;</span><span class="p">){</span><span class="k">return</span> <span class="nx">ne</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">ignoreCase</span><span class="o">?</span><span class="s2">&quot;i&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">multiline</span><span class="o">?</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">extended</span><span class="o">?</span><span class="s2">&quot;x&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">sticky</span><span class="o">?</span><span class="s2">&quot;y&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">o</span><span class="o">+</span><span class="s2">&quot;g&quot;</span><span class="p">);</span><span class="nx">i</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="nx">u</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot;$(?!\\s)&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">)}</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?-</span><span class="mi">1</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="o">:</span><span class="nx">O</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">index</span><span class="o">+</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">index</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}}})}</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">index</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">))}</span><span class="nx">h</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">n</span><span class="p">){</span><span class="k">break</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">===</span><span class="nx">s</span><span class="p">.</span><span class="nx">index</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">++</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">||!</span><span class="nx">r</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">l</span><span class="p">))}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}})()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;0&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">length</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="o">=</span><span class="kd">function</span> <span class="nx">$e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">return</span> <span class="nx">ne</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">ie</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ae</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[];</span><span class="s2">&quot;x&quot;</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/x(.)?/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">)});</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">}();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ae</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="o">=</span><span class="kd">function</span> <span class="nx">Ge</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="sr">/\)[*?]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">source</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">||!</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="nx">ie</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">lastIndex</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="nx">ie</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}}</span><span class="kd">var</span> <span class="nx">oe</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">substr</span><span class="p">;</span><span class="kd">var</span> <span class="nx">le</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">.</span><span class="nx">substr</span><span class="o">&amp;&amp;</span><span class="s2">&quot;0b&quot;</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;b&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">substr</span><span class="o">:</span><span class="kd">function</span> <span class="nx">Be</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">oe</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">t</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">t</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)}},</span><span class="nx">le</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ue</span><span class="o">=</span><span class="s2">&quot;	\n\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003&quot;</span><span class="o">+</span><span class="s2">&quot;\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028&quot;</span><span class="o">+</span><span class="s2">&quot;\u2029\ufeff&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">se</span><span class="o">=</span><span class="s2">&quot;\u200b&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">fe</span><span class="o">=</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">ue</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ce</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">fe</span><span class="o">+</span><span class="nx">fe</span><span class="o">+</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">he</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">fe</span><span class="o">+</span><span class="nx">fe</span><span class="o">+</span><span class="s2">&quot;*$&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">pe</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">trim</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">ue</span><span class="p">.</span><span class="nx">trim</span><span class="p">()</span><span class="o">||!</span><span class="nx">se</span><span class="p">.</span><span class="nx">trim</span><span class="p">());</span><span class="nx">m</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">trim</span><span class="o">:</span><span class="kd">function</span> <span class="nx">He</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="k">this</span><span class="o">===</span><span class="kc">null</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;can&#39;t convert &quot;</span><span class="o">+</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; to object&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">ce</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">he</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}},</span><span class="nx">pe</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">ue</span><span class="o">+</span><span class="s2">&quot;08&quot;</span><span class="p">)</span><span class="o">!==</span><span class="mi">8</span><span class="o">||</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">ue</span><span class="o">+</span><span class="s2">&quot;0x16&quot;</span><span class="p">)</span><span class="o">!==</span><span class="mi">22</span><span class="p">){</span><span class="nb">parseInt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="sr">/^0[xX]/</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">trim</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Number</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="mi">16</span><span class="o">:</span><span class="mi">10</span><span class="p">}</span><span class="k">return</span> <span class="nx">t</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">)}}(</span><span class="nb">parseInt</span><span class="p">)}});</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="c1">//# sourceMappingURL=es5-shim.map</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.07852s from github-fe132-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-aa525778734e809f86b506a9e578025218e40c30.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-7c08e57fe907469eef667960929fd17ff5f42546.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

